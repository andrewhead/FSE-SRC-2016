@ARTICLE{bowman:reasoning,
	AUTHOR = "Mic Bowman and Saumya K. Debray and Larry L. Peterson",
	TITLE = "Reasoning About Naming Systems",
	JOURNAL = "ACM Trans. Program. Lang. Syst.",
	VOLUME = {15},
	NUMBER = {5},
	PAGES = {795-825},
	MONTH = "November",
	YEAR = {1993}	}

@ARTICLE{braams:babel,
	AUTHOR = "Johannes Braams",
	TITLE = "Babel, a Multilingual Style-Option System for Use with LaTeX's Standard Document Styles",
	JOURNAL = {TUGboat},
	VOLUME = {12},
	NUMBER = {2},
	PAGES = {291-301},
	MONTH = "June",
	YEAR = {1991}	}

@INPROCEEDINGS{clark:pct,
	AUTHOR = "Malcolm Clark",
	TITLE = "Post Congress Tristesse",
	BOOKTITLE = "TeX90 Conference Proceedings",
	PAGES = "84-89",
	ORGANIZATION = "TeX Users Group",
	MONTH = "March", 
	YEAR = {1991}	}

@ARTICLE{herlihy:methodology,
	AUTHOR = "Maurice Herlihy",
	TITLE = "A Methodology for Implementing Highly Concurrent
	Data Objects",
	JOURNAL = {ACM Trans. Program. Lang. Syst.},
	VOLUME = {15},
	NUMBER = {5},
	PAGES = {745-770},
	MONTH = "November",
	YEAR = {1993}	}

@BOOK{Lamport:LaTeX,
	AUTHOR = "Leslie Lamport",
	TITLE = "LaTeX User's Guide and Document Reference Manual",
	PUBLISHER = "Addison-Wesley Publishing Company",
	ADDRESS = "Reading, Massachusetts",
	YEAR = "1986"	}

@BOOK{salas:calculus,
	AUTHOR = "S.L. Salas and Einar Hille",
	TITLE = "Calculus: One and Several Variable",
	PUBLISHER = "John Wiley and Sons",
	ADDRESS = "New York",
	YEAR = "1978"	}

@InProceedings{clarke_what_2007,
  author =	{Steven Clarke},
  title =	{{What is an End User Software Engineerl}},
  booktitle =	{End-User Software Engineering},
  year =	{2007},
  editor =	{Margaret H. Burnett and Gregor Engels and Brad A. Myers and Gregg Rothermel},
  number =	{07081},
  series =	{Dagstuhl Seminar Proceedings},
  ISSN =	{1862-4405},
  @publisher =	{Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik, Germany},
  @address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2007/1080},
  annote =	{Keywords: Personas, End user software engineer, Professional software engineer}
}

@article{ko_state_2011,
 author = {Ko, Andrew J. and Abraham, Robin and Beckwith, Laura and Blackwell, Alan and Burnett, Margaret and Erwig, Martin and Scaffidi, Chris and Lawrance, Joseph and Lieberman, Henry and Myers, Brad and Rosson, Mary Beth and Rothermel, Gregg and Shaw, Mary and Wiedenbeck, Susan},
 title = {The State of the Art in End-user Software Engineering},
 journal = {ACM Comput. Surv.},
 issue_date = {April 2011},
 volume = {43},
 number = {3},
 @month = apr,
 year = {2011},
 issn = {0360-0300},
 @pages = {21:1--21:44},
 articleno = {21},
 numpages = {44},
 url = {http://doi.acm.org/10.1145/1922649.1922658},
 doi = {10.1145/1922649.1922658},
 acmid = {1922658},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {End-user software engineering, end-user development, end-user programming, human-computer interaction, visual programming},
} 

@inproceedings{brandt_two_2009,
 author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Dontcheva, Mira and Klemmer, Scott R.},
 title = {Two Studies of Opportunistic Programming: Interleaving Web Foraging, Learning, and Writing Code},
 @booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '09},
 @year = {2009},
 isbn = {978-1-60558-246-7},
 location = {Boston, MA, USA},
 @pages = {1589--1598},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1518701.1518944},
 doi = {10.1145/1518701.1518944},
 acmid = {1518944},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {copy-and-paste, opportunistic programming, prototyping},
} 

@inproceedings{mamykina_fastest_2011,
 author = {Mamykina, Lena and Manoim, Bella and Mittal, Manas and Hripcsak, George and Hartmann, Bj\"{o}rn},
 title = {Design Lessons from the Fastest Q\&A Site in the West},
 @booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '11},
 @year = {2011},
 isbn = {978-1-4503-0228-9},
 location = {Vancouver, BC, Canada},
 @pages = {2857--2866},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1978942.1979366},
 doi = {10.1145/1978942.1979366},
 acmid = {1979366},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {mixed methods analysis, q\&\#38;a},
} 

@INPROCEEDINGS{head_tutorons_2015,
	author={A. Head and C. Appachu and M. A. Hearst and B. Hartmann},
	@booktitle={Visual Languages and Human-Centric Computing (VL/HCC), 2015 IEEE Symposium on},
	title={Tutorons: Generating context-relevant, on-demand explanations and demonstrations of online code},
	@year={2015},
	@pages={3-12},
	keywords={computer aided instruction;computer science education;source code (software);CSS selectors;Tutoron-generated explanations;co-occurring options compound explanations building;code demonstration synthesis;code modification tasks;context-relevant online code explanation;in-situ natural language explanations;language-specific routines;on-demand online code explanations;online code demonstrations;parse tree traversal;regular expressions;template instantiation;wget Unix command;Cascading style sheets;Visualization},
	doi={10.1109/VLHCC.2015.7356972},
	@month={Oct},
}

@inproceedings{hill_edit_1992,
 author = {Hill, William C. and Hollan, James D. and Wroblewski, Dave and McCandless, Tim},
 title = {Edit Wear and Read Wear},
 @booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '92},
 @year = {1992},
 isbn = {0-89791-513-5},
 location = {Monterey, California, USA},
 @pages = {3--9},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/142750.142751},
 doi = {10.1145/142750.142751},
 acmid = {142751},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {graphical user interfaces, informational physics, interface mechanisms, professional work, reflective practitioner},
}

@inproceedings{brandt_opportunistic_2008,
 author = {Brandt, Joel and Guo, Philip J. and Lewenstein, Joel and Klemmer, Scott R.},
 title = {Opportunistic Programming: How Rapid Ideation and Prototyping Occur in Practice},
 @booktitle = {Proceedings of the 4th International Workshop on End-user Software Engineering},
 series = {WEUSE '08},
 @year = {2008},
 isbn = {978-1-60558-034-0},
 location = {Leipzig, Germany},
 @pages = {1--5},
 numpages = {5},
 url = {http://doi.acm.org/10.1145/1370847.1370848},
 doi = {10.1145/1370847.1370848},
 acmid = {1370848},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {end-user software engineering, opportunistic programming, prototyping},
}

@inproceedings{storey_revolution_2014,
 author = {Storey, Margaret-Anne and Singer, Leif and Cleary, Brendan and Figueira Filho, Fernando and Zagalsky, Alexey},
 title = {The (R) Evolution of Social Media in Software Engineering},
 @booktitle = {Proceedings of the on Future of Software Engineering},
 series = {FOSE 2014},
 @year = {2014},
 isbn = {978-1-4503-2865-4},
 location = {Hyderabad, India},
 @pages = {100--116},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/2593882.2593887},
 doi = {10.1145/2593882.2593887},
 acmid = {2593887},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {Collaboration, Social Media, Software Engineering},
}

@ARTICLE{mili_reusing_1995,
author={H. Mili and F. Mili and A. Mili},
journal={IEEE Transactions on Software Engineering},
title={Reusing software: issues and research directions},
year={1995},
volume={21},
number={6},
pages={528-562},
keywords={object-oriented programming;software reusability;building blocks approach;managerial aspects;reusable components;reusable processor;reusable software;software component retrieval;software engineering;software productivity;software reuse measurements;technical challenges;Artificial intelligence;Buildings;Computer industry;Production;Productivity;Programming;Software engineering;Software quality;Software reusability;Software tools},
doi={10.1109/32.391379},
ISSN={0098-5589},
@month={Jun},}

@inproceedings{nykaza_what_2002,
 author = {Nykaza, Janet and Messinger, Rhonda and Boehme, Fran and Norman, Cherie L. and Mace, Matthew and Gordon, Manuel},
 title = {What Programmers Really Want: Results of a Needs Assessment for SDK Documentation},
 @booktitle = {Proceedings of the 20th Annual International Conference on Computer Documentation},
 series = {SIGDOC '02},
 year = {2002},
 isbn = {1-58113-543-2},
 location = {Toronto, Ontario, Canada},
 @pages = {133--141},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/584955.584976},
 doi = {10.1145/584955.584976},
 acmid = {584976},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {API documentation, SDK documentation, developer documentation, needs analysis, needs assessment, programmer documentation},
} 

@article{robillard_field_2011,
  title={A field study of API learning obstacles},
  author={Robillard, Martin P and Deline, Robert},
  journal={Empirical Software Engineering},
  volume={16},
  number={6},
  @pages={703--732},
  year={2011},
  @publisher={Springer}
}

@incollection{jeong_improving_2009,
  title={Improving documentation for eSOA APIs through user studies},
  author={Jeong, Sae Young and Xie, Yingyu and Beaton, Jack and Myers, Brad A and Stylos, Jeff and Ehret, Ralf and Karstens, Jan and Efeoglu, Arkin and Busse, Daniela K},
  booktitle={End-User Development},
  @pages={86--105},
  year={2009},
  @publisher={Springer}
}

@ARTICLE{lethbridge_how_2003,
author={T. C. Lethbridge and J. Singer and A. Forward},
journal={IEEE Software},
title={How software engineers use documentation: the state of the practice},
year={2003},
volume={20},
number={6},
@pages={35-39},
keywords={software engineering;system documentation;decision making;documentation update;documentation use;software engineering;software engineers;software process managers;software process personnel;tool design;Data engineering;Documentation;Humans;Maintenance engineering;Power engineering and energy;Software engineering;Software maintenance;Software systems;Software testing;System testing},
doi={10.1109/MS.2003.1241364},
ISSN={0740-7459},
@month={Nov},}

@inproceedings{pirolli_so_2009,
 author = {Pirolli, Peter and Wollny, Evelin and Suh, Bongwon},
 title = {So you know you're getting the best possible information: A tool that increases Wikipedia credibility},
 @booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '09},
 @year = {2009},
 isbn = {978-1-60558-246-7},
 location = {Boston, MA, USA},
 @pages = {1505--1508},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1518701.1518929},
 doi = {10.1145/1518701.1518929},
 acmid = {1518929},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {Wikidashboard, Wikipedia, credibility},
}

@inproceedings{towne_your_2013,
 author = {Towne, W. Ben and Kittur, Aniket and Kinnaird, Peter and Herbsleb, James},
 title = {Your process is showing: Controversy management and perceived quality in Wikipedia},
 @booktitle = {Proceedings of the 2013 Conference on Computer Supported Cooperative Work},
 series = {CSCW '13},
 @year = {2013},
 isbn = {978-1-4503-1331-5},
 location = {San Antonio, Texas, USA},
 @pages = {1059--1068},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2441776.2441896},
 doi = {10.1145/2441776.2441896},
 acmid = {2441896},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {discussion, dispute resolution, perceptions of quality, trust, user-generated content},
}

@inproceedings{borra_societal_2015,
 author = {Borra, Erik and Weltevrede, Esther and Ciuccarelli, Paolo and Kaltenbrunner, Andreas and Laniado, David and Magni, Giovanni and Mauri, Michele and Rogers, Richard and Venturini, Tommaso},
 title = {Societal Controversies in Wikipedia Articles},
 @booktitle = {Proceedings of the 33rd Annual ACM Conference on Human Factors in Computing Systems},
 series = {CHI '15},
 @year = {2015},
 isbn = {978-1-4503-3145-6},
 location = {Seoul, Republic of Korea},
 @pages = {193--196},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/2702123.2702436},
 doi = {10.1145/2702123.2702436},
 acmid = {2702436},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {controversy mapping, data visualization, social science, wikipedia},
} 

@article{arazy_recognizing_2010,
  title={Recognizing contributions in wikis: Authorship categories, algorithms, and visualizations},
  author={Arazy, Ofer and Stroulia, Eleni and Ruecker, Stan and Arias, Cristina and Fiorentino, Carlos and Ganev, Veselin and Yau, Timothy},
  journal={Journal of the American Society for Information Science and Technology},
  volume={61},
  number={6},
  @pages={1166--1179},
  year={2010},
  @publisher={Wiley Online Library}
}

@INPROCEEDINGS{begel_codebook_2010,
author={A. Begel and Y. P. Khoo and T. Zimmermann},
booktitle={2010 ACM/IEEE 32nd International Conference on Software Engineering},
title={Codebook: discovering and exploiting relationships in software repositories},
@year={2010},
volume={1},
pages={125-134},
keywords={data mining;data structures;software development management;team working;Deep Intellisense;Hoozizat Intellisense;codebook framework;data structure;interteam coordination;large-scale software engineering;microsoft engineers;software repositories;software repository mining;Computer bugs;Crawlers;Databases;Electronic mail;Programming;Servers;Software;inter-team coordination;knowledge management;mining software repositories;regular expression;regular language reachability;social networking},
doi={10.1145/1806799.1806821},
ISSN={0270-5257},
@month={May},}

@INPROCEEDINGS{hindle_whats_2009,
author={A. Hindle and M. W. Godfrey and R. C. Holt},
booktitle={Software Maintenance, 2009. ICSM 2009. IEEE International Conference on},
title={What's hot and what's not: Windowed developer topic analysis},
@year={2009},
pages={339-348},
keywords={program visualisation;programming language semantics;software engineering;word processing;commit-log comments;latent dirichlet allocation tool;latent semantic indexing tool;software developers;software project development;windowed topic analysis;Control systems;Database systems;History;Indexing;Large scale integration;Linear discriminant analysis;Pattern analysis;Performance analysis;Software development management;Visualization},
doi={10.1109/ICSM.2009.5306310},
ISSN={1063-6773},
@month={Sept},}

@inproceedings{kaptein_powerful_2010,
 author = {Kaptein, Maurits Clemens and Nass, Clifford and Markopoulos, Panos},
 title = {Powerful and Consistent Analysis of Likert-type Ratingscales},
 @booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
 series = {CHI '10},
 @year = {2010},
 isbn = {978-1-60558-929-9},
 location = {Atlanta, Georgia, USA},
 @pages = {2391--2394},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/1753326.1753686},
 doi = {10.1145/1753326.1753686},
 acmid = {1753686},
 @publisher = {ACM},
 @address = {New York, NY, USA},
 keywords = {nonparametric statistics, researchmethods, usability evaluation},
}

@inproceedings{ko_information_2007,
    @address = {Washington, DC, USA},
    series = {{ICSE} '07},
    title = {Information {Needs} in {Collocated} {Software} {Development} {Teams}},
    isbn = {978-0-7695-2828-1},
    url = {http://dx.doi.org/10.1109/ICSE.2007.45},
    doi = {10.1109/ICSE.2007.45},
    abstract = {Previous research has documented the fragmented nature of software development work. To explain this in more detail, we analyzed software developers' day-to-day information needs. We observed seventeen developers at a large software company and transcribed their activities in 90-minute sessions. We analyzed these logs for the information that developers sought, the sources that they used, and the situations that prevented information from being acquired. We identified twenty-one information types and cataloged the outcome and source when each type of information was sought. The most frequently sought information included awareness about artifacts and coworkers. The most often deferred searches included knowledge about design and program behavior, such as why code was written a particular way, what a program was supposed to do, and the cause of a program state. Developers often had to defer tasks because the only source of knowledge was unavailable coworkers.},
    urldate = {2015-11-20},
    @booktitle = {Proceedings of the 29th {International} {Conference} on {Software} {Engineering}},
    @publisher = {IEEE Computer Society},
    author = {Ko, Andrew J. and DeLine, Robert and Venolia, Gina},
    @year = {2007},
    @pages = {344--353},
    file = {Ko et al. - 2007 - Information Needs in Collocated Software Developme.pdf:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/ATM3XHUT/Ko et al. - 2007 - Information Needs in Collocated Software Developme.pdf:application/pdf}
}

@inproceedings{latoza_maintaining_2006,
    @address = {New York, NY, USA},
    series = {{ICSE} '06},
    title = {Maintaining {Mental} {Models}: {A} {Study} of {Developer} {Work} {Habits}},
    isbn = {978-1-59593-375-1},
    shorttitle = {Maintaining {Mental} {Models}},
    url = {http://doi.acm.org/10.1145/1134285.1134355},
    doi = {10.1145/1134285.1134355},
    abstract = {To understand developers' typical tools, activities, and practices and their satisfaction with each, we conducted two surveys and eleven interviews. We found that many problems arose because developers were forced to invest great effort recovering implicit knowledge by exploring code and interrupting teammates and this knowledge was only saved in their memory. Contrary to expectations that email and IM prevent expensive task switches caused by face-to-face interruptions, we found that face-to-face communication enjoys many advantages. Contrary to expectations that documentation makes understanding design rationale easy, we found that current design documents are inadequate. Contrary to expectations that code duplication involves the copy and paste of code snippets, developers reported several types of duplication. We use data to characterize these and other problems and draw implications for the design of tools for their solution.},
    urldate = {2015-09-16},
    @booktitle = {Proceedings of the 28th {International} {Conference} on {Software} {Engineering}},
    @publisher = {ACM},
    author = {LaToza, Thomas D. and Venolia, Gina and DeLine, Robert},
    @year = {2006},
    keywords = {agile software development, code duplication, code ownership, communication, debugging, interruptions},
    @pages = {492--501},
    annote = {There are several types of duplication beyond just copy and paste.},
    file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/PUSN3Q78/LaToza et al. - 2006 - Maintaining Mental Models A Study of Developer Wo.pdf:application/pdf}
}


@article{storey_how_2016,
    title = {How {Social} and {Communication} {Channels} {Shape} and {Challenge} a {Participatory} {Culture} in {Software} {Development}},
    volume = {PP},
    issn = {0098-5589},
    doi = {10.1109/TSE.2016.2584053},
    abstract = {Software developers use many different communication tools and channels in their work. The diversity of these tools has dramatically increased over the past decade, giving rise to a wide range of socially enabled communication channels and social media that developers use to support their activities. The availability of such social tools is leading to a participatory culture of software development, where developers want to engage with, learn from, and co-create software with other developers. However, the interplay of these social channels, as well as the opportunities and challenges they may create when used together within this participatory development culture, are not yet well understood. In this paper, we report on a large-scale survey conducted with 1,449 GitHub users. We describe which channels these developers find essential to their work and gain an understanding of the challenges they face using them. Our findings lay the empirical foundation for providing recommendations to developers and tool designers on how to use and improve tools for developers.},
    number = {99},
    journal = {IEEE Transactions on Software Engineering},
    author = {Storey, M. A. and Zagalsky, A. and Filho, F. and Singer, L. and German, D.},
    year = {2016},
    keywords = {collaboration, communication, Communication channels, CSCW, Electronic mail, Face, knowledge engineering, Media, Participatory Culture, social media, Software, Software engineering},
    @pages = {1--1},
    file = {IEEE Xplore Abstract Record:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/AXB7V7FU/articleDetails.html:text/html;IEEE Xplore Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/SP7WJX76/Storey et al. - 2016 - How Social and Communication Channels Shape and Ch.pdf:application/pdf}
}

@inproceedings{treude_awareness_2010,
    @address = {New York, NY, USA},
    series = {{ICSE} '10},
    title = {Awareness 2.0: {Staying} {Aware} of {Projects}, {Developers} and {Tasks} {Using} {Dashboards} and {Feeds}},
    isbn = {978-1-60558-719-6},
    shorttitle = {Awareness 2.0},
    url = {http://doi.acm.org/10.1145/1806799.1806854},
    doi = {10.1145/1806799.1806854},
    abstract = {Software development teams need to maintain awareness of various different aspects ranging from overall project status and process bottlenecks to current tasks and incoming artifacts. Currently, there is a lack of theoretical foundations to guide tool selection and tool design to best support awareness tasks. In this paper, we explore how the combination of highly configurable project, team and contributor dashboards along with individual event feeds is used to accomplish extensive awareness. Our results stem from an empirical study of several large development teams, with a detailed study of a team of 150 developers and additional data from another four project teams. We present how dashboards become pivotal to task prioritization in critical project phases and how they stir competition while feeds are used for short term planning. Our findings indicate that the distinction between high-level and low-level awareness is often unclear and that integrated tooling could improve development practices.},
    urldate = {2016-02-18},
    @booktitle = {Proceedings of the 32nd {ACM}/{IEEE} {International} {Conference} on {Software} {Engineering} - {Volume} 1},
    @publisher = {ACM},
    author = {Treude, Christoph and Storey, Margaret-Anne},
    @year = {2010},
    keywords = {awareness, collaboration, dashboards, Feeds, Web 2.0},
    @pages = {365--374},
    file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/RTGJK3CZ/Treude and Storey - 2010 - Awareness 2.0 Staying Aware of Projects, Develope.pdf:application/pdf}
}


@article{johnson_improving_2005,
    title = {Improving software development management through software project telemetry},
    volume = {22},
    issn = {0740-7459},
    doi = {10.1109/MS.2005.95},
    abstract = {Conventional wisdom in the software engineering research community says that metrics can make project management more effective. Software metrics range from internal product attributes such as size, complexity, and modularity to external process attributes such as effort, productivity, and reliability. Software project telemetry facilitates local, in-process decision making.},
    number = {4},
    journal = {IEEE Software},
    author = {Johnson, P.M. and Kou, Hongbing and Paulding, M. and Zhang, Qin and Kagawa, A. and Yamashita, T.},
    @month = jul,
    year = {2005},
    keywords = {automated software metrics collection and analysis, Best practices, Computerized monitoring, decision making, in-process decision making, Predictive models, Project management, Remote monitoring, software development management, software engineering research community, software measurement, software metrics, software project telemetry, Telemetry},
    @pages = {76--85},
    file = {IEEE Xplore Abstract Record:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/BBDRN92K/articleDetails.html:text/html;IEEE Xplore Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/PDHZVFTK/Johnson et al. - 2005 - Improving software development management through .pdf:application/pdf}
}


@inproceedings{singer_software_2014,
    @address = {New York, NY, USA},
    series = {{ICSE} 2014},
    title = {Software {Engineering} at the {Speed} of {Light}: {How} {Developers} {Stay} {Current} {Using} {Twitter}},
    isbn = {978-1-4503-2756-5},
    shorttitle = {Software {Engineering} at the {Speed} of {Light}},
    url = {http://doi.acm.org/10.1145/2568225.2568305},
    doi = {10.1145/2568225.2568305},
    abstract = {The microblogging service Twitter has over 500 million users posting over 500 million tweets daily. Research has established that software developers use Twitter in their work, but this has not yet been examined in detail. Twitter is an important medium in some software engineering circles—understanding its use could lead to improved support, and learning more about the reasons for non-adoption could inform the design of improved tools. In a qualitative study, we surveyed 271 and interviewed 27 developers active on GitHub. We find that Twitter helps them keep up with the fast-paced development landscape. They use it to stay aware of industry changes, for learning, and for building relationships. We discover the challenges they experience and extract their coping strategies. Some developers do not want to or cannot embrace Twitter for their work—we show their reasons and alternative channels. We validate our findings in a follow-up survey with more than 1,200 respondents.},
    urldate = {2016-02-17},
    @booktitle = {Proceedings of the 36th {International} {Conference} on {Software} {Engineering}},
    @publisher = {ACM},
    author = {Singer, Leif and Figueira Filho, Fernando and Storey, Margaret-Anne},
    @year = {2014},
    keywords = {awareness, learning, Microblogging, social media, twitter},
    @pages = {211--221},
    file = {ACM Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/STXUPIUW/Singer et al. - 2014 - Software Engineering at the Speed of Light How De.pdf:application/pdf}
}

@inproceedings{parnin_blogging_2013,
    title = {Blogging developer knowledge: {Motivations}, challenges, and future directions},
    shorttitle = {Blogging developer knowledge},
    doi = {10.1109/ICPC.2013.6613850},
    abstract = {Why do software developers place so much effort into writing public blog posts about their knowledge, experiences, and opinions on software development? What are the benefits, problems, and tools needed-what can the research community do to help? In this paper, we describe a research agenda aimed at understanding the motivations and issues of software development blogging. We interviewed developers as well as mined and analyzed their blog posts. For this initial study, we selected developers from various backgrounds: IDE plugin development, mobile development, and web development. We found that developers used blogging for a variety of functions such as documentation, technology discussion, and announcing progress. They were motivated by a variety of reasons such as personal branding, knowledge retention, and feedback. Among the challenges for blog authors identified in our initial study, we found primitive tool support, difficulty recreating and recalling recent development experiences, and management of blog comments. Finally, many developers expressed that the motivations and benefits they received for blogging in public did not directly translate to corporate settings.},
    @booktitle = {2013 21st {International} {Conference} on {Program} {Comprehension} ({ICPC})},
    author = {Parnin, C. and Treude, C. and Storey, M. A.},
    @month = may,
    @year = {2013},
    keywords = {blog comments, blogging developer knowledge, Blogs, communities, development experiences, Documentation, Educational institutions, Employment, Feedback, IDE plugin development, knowledge retention, Media, mobile development, personal branding, primitive tool support, public blog posts, research agenda, Software, software developers, software development blogging, Software engineering, system documentation, technology discussion, web development, Web sites},
    @pages = {211--214},
    file = {IEEE Xplore Abstract Record:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/ZQ35NI65/abs_all.html:text/html;IEEE Xplore Full Text PDF:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/UTRKMDAR/Parnin et al. - 2013 - Blogging developer knowledge Motivations, challen.pdf:application/pdf}
}

@misc{awesome_python,
  title = {{Awesome} {Python}},
  howpublished = {\url{https://python.libhunt.com/}},
}

@misc{ruby_toolbox,
  title = {{Ruby} {Toolbox}},
  howpublished = {\url{https://www.ruby-toolbox.com/}},
}

@misc{package_quality,
  title = {package-quality},
  howpublished = {\url{https://github.com/alexfernandez/package-quality}},
}

@inproceedings{krafft_how_2016,
	address = {New York, NY, USA},
	series = {{ICSE} '16},
	title = {How {Do} {Free}/{Open} {Source} {Developers} {Pick} {Their} {Tools}?: {A} {Delphi} {Study} of the {Debian} {Project}},
	isbn = {978-1-4503-4205-6},
	shorttitle = {How {Do} {Free}/{Open} {Source} {Developers} {Pick} {Their} {Tools}?},
	url = {http://doi.acm.org/10.1145/2889160.2889248},
	doi = {10.1145/2889160.2889248},
	abstract = {Free and Open Source Software (FOSS) has come to play a critical role in the global software industry. Organizations are widely adopting FOSS and interacting with open source communities, and hence organizations have a considerable interest in seeing these communities flourishing. Little research has focused on the tools used to develop that software. Given the absence of formal mandate that would appear in traditional organizations, an open question is what influences a FOSS contributor's decision to adopt a tool and how workflows get established in FOSS teams. In this paper we report on a Delphi study conducted in the Debian Project, one of the largest FOSS projects. Drawing from data collected in three phases from a panel of 21 carefully selected and well-informed participants, we identified 15 factors that affect decisions to adopt tools and relate those to existing models of innovation and diffusion.},
	urldate = {2016-07-01},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering} {Companion}},
	publisher = {ACM},
	author = {Krafft, Martin F. and Stol, Klaas-Jan and Fitzgerald, Brian},
	year = {2016},
	keywords = {Delphi study, free/open source software, qualitative study, tools},
	pages = {232--241},
	file = {Krafft et al. - 2016 - How Do FreeOpen Source Developers Pick Their Tool.pdf:/Users/andrew/Library/Application Support/Zotero/Profiles/g1y3llo0.default/zotero/storage/VGIUWVDM/Krafft et al. - 2016 - How Do FreeOpen Source Developers Pick Their Tool.pdf:application/pdf}
}
